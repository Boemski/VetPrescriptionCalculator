#Raven Cepeda
#Intro to Programming
#Professor Woods
#10/31/2014
#Creating a class called 'RetailItem' to hold data in regards to clothing items
#create class RetailItem
class RetailItem:
    #create constructor __init__ to initialize the attributes.

    def __init__(self, description, units, price):
        #create attributes to have data returned back to
        self.__description = description
        self.__units = units
        self.__price = price


        # Using __ (two underscores) preceding an attribute name is a standard Python syntax convention unrelated to my personal opinion / advice below.
        # This example works: __unitsOfInventory (Pascal Case) or __UnitsOfInventory (Camel Case)
        # This example works too but I don't recommend it for separating words because it uses up more space unnecessarily: __units_of_inventory

        def getDescription(self):
            return self.__description
        def setDescription(self, description)
            self.__description = description


        def __str__(self)
            return "Description: " + self.__description + \
                    "\nUnits in Inventory: " + self.__units + \
                    "\nPrice: " + self.__price

#create main method to print methods above
def main():


    item1 = RetailItem("Jacket", 12, 59.95)
    .

    
    item1 = RetailItem()
    item1.setDescription("Jacket")



    print(item1)


    print("Item 1 Description: " + item1.getDescription)

main()